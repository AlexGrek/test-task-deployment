{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "test-task.fullname" . }}-postgresql
  labels:
    {{- include "test-task.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "test-task.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgresql
  template:
    metadata:
      labels:
        {{- include "test-task.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:15-alpine
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "test-task.fullname" . }}-postgresql
                  key: postgres-password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "test-task.fullname" . }}-postgresql
                  key: username
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "$(POSTGRES_USER)" -d "$(POSTGRES_DB)" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "$(POSTGRES_USER)" -d "$(POSTGRES_DB)" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          {{- if .Values.postgresql.primary.persistence.enabled }}
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
          {{- end }}
      {{- with .Values.postgresql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgresql.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.postgresql.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.postgresql.primary.persistence.enabled }}
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: {{ include "test-task.fullname" . }}-postgresql-pvc
      {{- end }}
{{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "test-task.fullname" . }}-postgresql
  labels:
    {{- include "test-task.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: postgresql
      protocol: TCP
      name: postgresql
  selector:
    {{- include "test-task.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql

{{- if .Values.postgresql.primary.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "test-task.fullname" . }}-postgresql-pvc
  labels:
    {{- include "test-task.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgresql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgresql.primary.persistence.size }}
{{- end }}
{{- end }}